{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/item.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://localhost:8080/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" style=\"color:white;\">Inventory Manager</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n  <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n     <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n           <a href=\"#\" class=\"nav-link\" (click)=\"onOpenModal(null, 'add')\">Add Item<span class=\"sr-only\">(current)</span></a>\n        </li>\n     </ul>\n  </div>\n</nav>\n\n<div class=\"container\" id=\"main-container\">\n    <div class=\"row mt-3\">\n        <div *ngFor=\"let item of items\" class=\"col-md-4 col-xl-3\">\n            <div class=\"card m-b-30\">\n                <div class=\"card-body row\">\n                    <div class=\"col-6 card-title align-self-center mb-0\">\n                        <h5>{{item?.name}}</h5>\n                    </div>\n                </div>\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\">Amount : {{item?.amount}}</li>\n                    <li class=\"list-group-item\">Inventory code : {{item?.inventoryCode}}</li>\n                </ul>\n                <div class=\"card-body\">\n                  <div class=\"float-right btn-group btn-group-sm\">\n                     <a (click)=\"onOpenModal(item, 'edit')\" class=\"btn btn-primary tooltips\" data-placement=\"top\" data-original-title=\"Edit\"><i class=\"fa fa-pencil\"></i> </a>\n                     <a (click)=\"onOpenModal(item, 'delete')\" class=\"btn btn-secondary tooltips\" data-placement=\"top\" data-original-title=\"Delete\"><i class=\"fa fa-times\"></i></a>\n                  </div>\n               </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Add Item Modal -->\n<div class=\"modal fade\" id=\"addItemModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addItemModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n       <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"addEmployeeModalLabel\">Add Item</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n          </button>\n       </div>\n       <div class=\"modal-body\">\n          <form #addForm=\"ngForm\" (ngSubmit)=\"onAddItem(addForm)\">\n          <div class=\"form-group\">\n             <label for=\"name\">Name</label>\n             <input type=\"text\" ngModel name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Name\" required>\n          </div>\n          <div class=\"form-group\">\n             <label for=\"amount\">Amount</label>\n             <input type=\"number\" ngModel name=\"amount\" class=\"form-control\" id=\"amount\" placeholder=\"0\" required>\n          </div>\n          <div class=\"form-group\">\n             <label for=\"inventoryCode\">Inventory Code</label>\n             <input type=\"number\" ngModel name=\"inventoryCode\" class=\"form-control\" id=\"inventoryCode\" placeholder=\"90200\" required>\n          </div>\n          <div class=\"modal-footer\">\n             <button type=\"button\" id=\"add-Item-form\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n             <button [disabled]=\"addForm.invalid\" type=\"submit\" class=\"btn btn-primary\" >Save</button>\n          </div>\n          </form>\n       </div>\n    </div>\n  </div>\n  </div>\n\n<!-- Edit Modal -->\n<div class=\"modal fade\" id=\"updateItemModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"ItemEditModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n       <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"updateItemModalLabel\">Edit Item {{editItem?.name}}</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n          </button>\n       </div>\n       <div class=\"modal-body\">\n          <form #editForm=\"ngForm\">\n            <input type=\"hidden\" ngModel=\"{{editItem?.id}}\" name=\"id\" class=\"form-control\" id=\"id\">\n             <div class=\"form-group\">\n                <label for=\"name\">Name</label>\n                <input type=\"text\" ngModel=\"{{editItem?.name}}\" name=\"name\" class=\"form-control\" id=\"name\" aria-describedby=\"emailHelp\" placeholder=\"Name\">\n             </div>\n             <div class=\"form-group\">\n                <label for=\"amount\">Amount</label>\n                <input type=\"number\" ngModel=\"{{editItem?.amount}}\" name=\"amount\" class=\"form-control\" id=\"amount\" placeholder=\"0\">\n             </div>\n             <div class=\"form-group\">\n                <label for=\"inventoryCode\">Inventory Code</label>\n                <input type=\"number\" ngModel=\"{{editItem?.inventoryCode}}\" name=\"inventoryCode\" class=\"form-control\" id=\"inventoryCode\" placeholder=\"90200\">\n             </div>\n             <div class=\"modal-footer\">\n                <button type=\"button\" id=\"\" data-dismiss=\"modal\" class=\"btn btn-secondary\">Close</button>\n                <button (click)=\"onUpdateItem(editForm.value)\" data-dismiss=\"modal\" class=\"btn btn-primary\" >Save changes</button>\n             </div>\n          </form>\n       </div>\n    </div>\n </div>\n</div>\n\n<!-- Delete Modal -->\n<div class=\"modal fade\" id=\"deleteItemModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteItemlLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n       <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"deleteModelLabel\">Delete Item</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n          </button>\n       </div>\n       <div class=\"modal-body\">\n          <p>Are you sure you want to delete Item {{deleteItem?.name}}?</p>\n          <div class=\"modal-footer\">\n             <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\n             <button (click)=\"onDeleteItem(deleteItem?.id)\" class=\"btn btn-danger\" data-dismiss=\"modal\">Yes</button>\n          </div>\n       </div>\n    </div>\n </div>\n</div>\n\n<!-- Notification for no items -->\n<div *ngIf=\"items === null\" class=\"col-lg-12 col-md-12 col-xl-12\">\n  <div class=\"alert alert-info\" role=\"alert\">\n    <h4 class=\"alert-heading\">NO ITEMS!</h4>\n    <p>No Items were found.</p>\n  </div>\n</div>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Item } from './Item';\nimport { ItemService } from './item.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public items: Item[]\n  public editItem: Item\n  public deleteItem: Item\n\n  constructor(private itemService: ItemService) { }\n\n  ngOnInit() {\n    this.getItems();\n  }\n\n  public getItems(): void {\n    this.itemService.getItems().subscribe(\n      (response: Item[]) => {\n        this.items = response\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message)\n      }\n    )\n  }\n\n  public onAddItem(addForm: NgForm): void {\n    document.getElementById('add-Item-form').click()\n    this.itemService.addItem(addForm.value).subscribe(\n      (response: Item) => {\n        console.log(response)\n        this.getItems()\n        addForm.reset()\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message)\n      }\n    )\n  }\n\n  public onUpdateItem(item: Item): void {\n    this.itemService.updateItem(item).subscribe(\n      (response: Item) => {\n        console.log(response)\n        this.getItems()\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message)\n      }\n    )\n  }\n\n  public onDeleteItem(itemId: number): void {\n    this.itemService.deleteItem(itemId).subscribe(\n      (response: Item) => {\n        console.log(response)\n        this.getItems()\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message)\n      }\n    )\n  }\n\n  public onOpenModal(item: Item, mode: string): void {\n    const container = document.getElementById('main-container')\n    const button = document.createElement('button')\n    button.type = 'button'\n    button.style.display = 'none'\n    button.setAttribute('data-toggle', 'modal')\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addItemModal')\n    }\n    if (mode === 'edit') {\n      button.setAttribute('data-target', '#updateItemModal')\n      this.editItem = item\n    }\n    if (mode === 'delete') {\n      button.setAttribute('data-target', '#deleteItemModal')\n      this.deleteItem = item\n    }\n    container.appendChild(button)\n    button.click()\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ItemService } from './item.service';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ItemService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Item } from './Item';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ItemService {\r\n    private apiServerUrl = environment.apiBaseUrl;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public getItems(): Observable<Item[]> {\r\n        return this.http.get<Item[]>(`${this.apiServerUrl}/items`);\r\n    }\r\n\r\n    public addItem(item: Item): Observable<Item> {\r\n        return this.http.post<Item>(`${this.apiServerUrl}/items`, item);\r\n    }\r\n\r\n    public updateItem(item: Item): Observable<Item> {\r\n        return this.http.put<Item>(`${this.apiServerUrl}/items`, item);\r\n    }\r\n    // public updateItem(itemId: number): Observable<Item> {\r\n    //     return this.http.put<Item>(`${this.apiServerUrl}/items/${itemId}`, item);\r\n    // }\r\n\r\n    public deleteItem(itemId: number): Observable<Item> {\r\n        return this.http.delete<Item>(`${this.apiServerUrl}/items/${itemId}`);\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}